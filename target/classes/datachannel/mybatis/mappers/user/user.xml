<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.mosai.vliveshow.datachannel.domain.user.User">
    
    <resultMap type="User" id="userMap">
        <id column="ID" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="password_salt" property="passwordSalt"/>
        <result column="nick_name" property="nickName"/>
        <result column="nation_code" property="nationCode"/>
        <result column="mobile_phone" property="mobilePhone"/>
        <result column="phone_encrypt" property="phoneEncrypt"/>
        <result column="gender" property="gender"/>
        <result column="avatars" property="avatars" typeHandler="com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler"/>
        <result column="show_cover" property="showCover"  typeHandler="com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler"/>
        <result column="thirdparty_account" property="thirdpartyAccount"/>
        <result column="thirdparty_platform" property="thirdpartyPlatform"/>
        <result column="thirdparty_icon_url" property="thirdpartyIconUrl"/>
        <result column="signup_type" property="signupType"/>
        <result column="login_time" property="loginTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="level" property="level"/>
        <result column="experience" property="experience"/>
        <result column="intro" property="intro"/>
        <result column="area" property="area"/>
        <result column="role" property="role"/>
        <result column="open_id" property="openId"/>
        <result column="is_blocked" property="isBlocked"/>
    </resultMap>
    
    <sql id="commonSelect">
        select id as ID,
               username as username,
        	   password as password,
        	   password_salt as password_salt,
        	   nick_name as nick_name,
        	   nation_code as nation_code,
        	   mobile_phone as mobile_phone,
        	   phone_encrypt as phone_encrypt,
        	   gender as gender,
        	   avatars as avatars,
        	   thirdparty_account as thirdparty_account,
        	   thirdparty_platform as thirdparty_platform,
        	   thirdparty_icon_url as thirdparty_icon_url,
        	   signup_type as signup_type,
        	   login_time as login_time,
        	   update_time as update_time,
        	   create_time as create_time,
        	   level as level,
        	   experience as experience,
        	   intro as intro,
        	   area as area,
        	   show_cover as show_cover,
        	   role as role,
        	   open_id as open_id,
        	   is_blocked as is_blocked 
        from "user" u
    </sql>
    
    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="User">
    	insert into "user"(username,password,password_salt,nick_name,avatars,show_cover,nation_code,mobile_phone,gender,thirdparty_account,thirdparty_platform,signup_type,login_time,update_time,create_time,level,experience,thirdparty_icon_url,role,phone_encrypt) 
    	           values (#{username},#{password},#{passwordSalt},#{nickName},#{avatars,typeHandler=com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler},#{showCover,typeHandler=com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler},#{nationCode},#{mobilePhone},#{gender},#{thirdpartyAccount},#{thirdpartyPlatform},#{signupType},#{loginTime},#{updateTime},#{createTime},#{level},#{experience},#{thirdpartyIconUrl},#{role},#{phoneEncrypt})
    </insert>
    <select id="queryPage" resultMap="userMap">
        <include refid="commonSelect"/>
    </select>
    <select id="query" resultMap="userMap">
        <include refid="commonSelect"/>
        <where>
        	<if test="role != null">
        		role = #{role}
        	</if>
        </where>
    </select>
    <select id="getById" resultMap="userMap">
        <include refid="commonSelect"/>
        where id=#{id}
    </select>

    
    <update id="update" parameterType="User">
        update "user"
        <set>
        	<if test="updateTime != null">
                update_time = TIMESTAMP '${updateTime}',
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="passwordSalt != null">
                password_salt = #{passwordSalt},
            </if>
            <if test="nationCode != null">
                nation_code = #{nationCode},
            </if>
            <if test="mobilePhone != null">
                mobile_phone = #{mobilePhone},
            </if>
            <if test="phoneEncrypt != null">
                phone_encrypt = #{phoneEncrypt},
            </if>
            <if test="avatars != null">
                avatars = #{avatars,typeHandler=com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler},
            </if>
            <if test="showCover != null">
                show_cover = #{showCover,typeHandler=com.mosai.vliveshow.core.orm.mybatis.handler.JsonEntityTypeHandler},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="experience != null">
                experience = #{experience},
            </if>
            <if test="intro != null">
                intro = #{intro},
            </if>
            <if test="area != null">
                area = #{area},
            </if>
            <if test="thirdpartyIconUrl != null">
                thirdparty_icon_url = #{thirdpartyIconUrl},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="openId != null">
                open_id = #{openId},
            </if>
            <if test="isBlocked != null">
                is_blocked = #{isBlocked},
            </if>
        </set>
        <where>
            id=#{id}
        </where>
    </update>
    
    <select id="getByUsername" resultMap="userMap">
        <include refid="commonSelect"/>
        where u.username=#{username}
    </select>
    <select id="findOne" resultMap="userMap">
        <include refid="commonSelect"/>
        <where>
             <if test="username != null and username != ''">
                 username=#{username}
             </if>
             <if test="nickName != null and nickName != ''">
                and nick_name=#{nickName}
             </if>
             <if test="mobilePhone != null and mobilePhone != ''">
                and mobile_phone=#{mobilePhone}
             </if>
             <if test="nationCode != null and nationCode != ''">
                and nation_code=#{nationCode}
             </if>
             <if test="thirdpartyPlatform != null and thirdpartyPlatform != ''">
                and thirdparty_platform=#{thirdpartyPlatform}
             </if>
             <if test="thirdpartyAccount != null and thirdpartyAccount != ''">
                and thirdparty_account=#{thirdpartyAccount}
             </if>
            <if test="openId != null and openId != ''">
                AND open_id = #{openId}
            </if>
         </where>
    </select>
    <select id="count" resultType="_int">
    	select count(1) from "user"
    	<where>
             <if test="username != null and username != ''">
                 username=#{username}
             </if>
             <if test="nickName != null and nickName != ''">
                and nick_name=#{nickName}
             </if>
             <if test="mobilePhone != null and mobilePhone != ''">
                and mobile_phone=#{mobilePhone}
             </if>
             <if test="nationCode != null and nationCode != ''">
                and nation_code=#{nationCode}
             </if>
             <if test="thirdpartyPlatform != null and thirdpartyPlatform != ''">
                and thirdparty_platform=#{thirdpartyPlatform}
             </if>
             <if test="thirdpartyAccount != null and thirdpartyAccount != ''">
                and thirdparty_account=#{thirdpartyAccount}
             </if>
            <if test="openId != null and openId != ''">
                AND open_id = #{openId}
            </if>
         </where>
    </select>
    
    <delete id="deleteUserById">
        update "user" set mobile_phone=null, nation_code=null, phone_encrypt=null where id = #{userId}
    </delete>
    
    <select id="queryPageForUser" resultType="java.util.HashMap">
      select id "userId",
        nick_name "nickName",
        to_char(create_time,'YYYY-MM-DD HH24:MI:SS') create_time,
        mobile_phone as "mobilePhone",
        gender,
        thirdparty_platform,
        role,
        u.phone_encrypt 
        from "user" u 
      <where>
        <if test="params.ID != null and params.ID != ''">
             u.id = #{params.ID}
        </if>
        <if test="params.nickName != null and params.nickName != ''">
             and u.nick_name like #{params.nickName}
        </if>
        <if test="params.gender_eq != null and params.gender_eq != ''">
             and u.gender = #{params.gender_eq}
        </if>
        <if test="params.role_include != null">
             and u.role &amp; #{params.role_include} > 0
        </if>
        <if test="params.mobilePhone_eq != null">
             and u.mobile_phone = #{params.mobilePhone_eq} 
        </if>
        <if test="params.register_time_gt != null">
             and u.create_time &gt;= to_date(#{params.register_time_gt}, 'YYYY-MM-DD')  
        </if>
         <if test="params.register_time_lt != null">
             and u.create_time &lt;= to_date(#{params.register_time_lt}, 'YYYY-MM-DD') + 1  
        </if>
      </where>
       <if test="sorts.keys.size() > 0">
            order by 
            <foreach collection="sorts.keys" item="key" separator=",">
                ${key} ${sorts[key]}
            </foreach>
        </if>
       <!--  limit #{params.pageSize} offset (#{params.currentPage}-1)*#{params.pageSize} -->
    </select>
    
     <select id="countForUser" resultType="_int">
     	select count(1) from "user" u
      <where>
        <if test="params.ID != null and params.ID != ''">
             u.id = #{params.ID}
        </if>
        <if test="params.nickName != null and params.nickName != ''">
             and u.nick_name like #{params.nickName}
        </if>
        <if test="params.gender_eq != null and params.gender_eq != ''">
             and u.gender = #{params.gender_eq}
        </if>
        <if test="params.role_include != null">
             and u.role &amp; #{params.role_include} > 0
        </if>
        <if test="params.mobilePhone_eq != null">
             and u.mobile_phone = #{params.mobilePhone_eq} 
        </if>
        <if test="params.register_time_gt != null">
             and u.create_time &gt;= to_date(#{params.register_time_gt}, 'YYYY-MM-DD')  
        </if>
         <if test="params.register_time_lt != null">
             and u.create_time &lt;= to_date(#{params.register_time_lt}, 'YYYY-MM-DD') + 1  
        </if>
      </where>
    </select>
    
    <select id="findUserByID" resultType="java.util.HashMap">
      select id "userId",
        nick_name "nickName",
        to_char(create_time,'YYYY-MM-DD HH24:MI:SS') create_time,
        avatars,
        mobile_phone as "mobilePhone",
        gender,
        signup_type "signupType",
        thirdparty_platform,
        level,
        experience,
        area,
        nation_code "nationCode",
        intro "introduction",
        role,
        following,
        follower,
        phone_encrypt,
        open_id,
        is_blocked
      from "user" where id=#{userId}
    </select>
    
    <select id="queryUserByIds" resultType="java.util.HashMap">
      select id "userId",
        nick_name "nickName",
        to_char(create_time,'YYYY-MM-DD HH24:MI:SS') create_time,
        avatars,
        mobile_phone as "mobilePhone",
        gender,
        signup_type "signupType",
        thirdparty_platform,
        level,
        experience,
        area,
        nation_code "nationCode",
        intro "introduction",
        role,
        following,
        follower,
        phone_encrypt,
        open_id,
        is_blocked "isBlocked"
      from "user" u  WHERE ID in
       <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
           #{item}
      </foreach>
      
    </select>   
    
    <select id="queryBlockedUsersList" resultType="java.util.HashMap">
      select 
	       id,
	       nick_name,
	       is_blocked,
	       update_time 
      from public.user 
      where 
            is_blocked = true 
      order by update_time desc 
      limit 200

    </select>  
    
     <select id="countByIds" resultType="_int">
    	select count(1) from "user"
    	WHERE ID in
       <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
           #{item}
      </foreach>
    </select>

    <update id="grantHostRoleByIds" parameterType="User">
        update "user" set role = role | 1 WHERE ID in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="grantTrialHostRoleByIds" parameterType="User">
        update "user" set role = role | 64 WHERE ID in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="findUserLocale" resultType="java.lang.String">
      select localized_model from user_device_info where user_id=#{userId}
    </select>
    
    <select id="findFollowedHost" resultType="java.lang.String">
      select user_to_uid from user_attention ut
            where user_from_uid=#{userId} and exists (select 1 from "user" u where u.id=ut.user_to_uid and u.role &amp; 1 >0 )
    </select>
    
    <select id="queryZombieFan" resultMap="userMap" parameterType="java.util.Date">
    	<include refid="commonSelect"/>
    	<where>
    		 <if test="date != null and date != ''">
                <![CDATA[ create_time <= #{date,jdbcType=TIMESTAMP}]]>
             </if>
    	</where>
    </select>
    
</mapper>