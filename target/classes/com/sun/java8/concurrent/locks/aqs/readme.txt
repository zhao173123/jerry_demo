1.P23 主内存和工作内存补充
 主内存和工作内存的交互使用8种操作：
 lock:锁住主内存变量，把一个变量标识为线程独占状态
 unlock:解锁主内存变量，和lock对应
 read:从主内存中读取变量到工作内存，以便之后的load动作使用
 load:作用于工作内存，把read操作从主内存中读取到的变量赋值给工作内存中的变量副本
 use:作用于工作内存，把工作内存中的一个变量值传递给执行引擎，每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作
 assign:执行引擎对变量的修改后赋值给工作内存变量
 store:把工作内存中的变量放入到主内存中
 write:把从工作内存中store得到的变量赋值给主内存变量

 这几种操作必须遵守以下的规则：
 ·成对出现，read|write、load|store
 ·不允许一个线程丢弃它的最近assign的操作，即变量在工作内存中改变了之后必须同步到主内存中
 ·新变量只能在主内存中产生，即use和store之前，必须有load和assign
 ·一次只能有一个线程lock操作，同一个线程可以多次lock
 ·lock之前必须同步变量到主存
 ·unlock不能单独使用，必须和lock配合

 *********************** *********************** *********************** *********************** ***********************

