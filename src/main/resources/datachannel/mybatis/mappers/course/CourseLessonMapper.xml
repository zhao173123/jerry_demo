<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mosai.vliveshow.datachannel.repository.course.CourseLessonMapper">
  <resultMap id="BaseResultMap" type="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="lesson_name" jdbcType="VARCHAR" property="lessonName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
    <result column="room_info" jdbcType="VARCHAR" property="roomInfo" />
    <result column="actual_start_time" jdbcType="TIMESTAMP" property="actualStartTime" />
    <result column="actual_end_time" jdbcType="TIMESTAMP" property="actualEndTime" />
    <result column="lesson_no" jdbcType="INTEGER" property="lessonNo" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, lesson_name, start_time, end_time, create_time, update_time, operator, 
    room_info, actual_start_time, actual_end_time, lesson_no, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_lesson
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCdt" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_lesson
    <where>
      <if test="courseId != null">
        and course_id = #{courseId,jdbcType=INTEGER}
      </if>
      <if test="lessonName != null">
        and lesson_name = #{lessonName,jdbcType=VARCHAR}
      </if>
      <if test="startTime != null">
        and start_time = #{startTime,jdbcType=TIMESTAMP}
      </if>
      <if test="endTime != null">
        and end_time = #{endTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="operator != null">
        and operator = #{operator,jdbcType=INTEGER}
      </if>
      <if test="roomInfo != null">
        and room_info = #{roomInfo,jdbcType=VARCHAR}
      </if>
      <if test="actualStartTime != null">
        and actual_start_time = #{actualStartTime,jdbcType=TIMESTAMP}
      </if>
      <if test="actualEndTime != null">
        and actual_end_time = #{actualEndTime,jdbcType=TIMESTAMP}
      </if>
      <if test="lessonNo != null">
        and lesson_no = #{lessonNo,jdbcType=INTEGER}
      </if>
      <if test="isDeleted != null">
        and is_deleted = #{isDeleted,jdbcType=BIT}
      </if>
      order by start_time
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_course_lesson
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    insert into t_course_lesson (id, course_id, lesson_name, 
      start_time, end_time, create_time, 
      update_time, operator, room_info, 
      actual_start_time, actual_end_time, lesson_no, is_deleted
      )
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{lessonName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER}, #{roomInfo,jdbcType=VARCHAR}, 
      #{actualStartTime,jdbcType=TIMESTAMP}, #{actualEndTime,jdbcType=TIMESTAMP}, #{lessonNo,jdbcType=INTEGER},#{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    insert into t_course_lesson
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="lessonName != null">
        lesson_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="roomInfo != null">
        room_info,
      </if>
      <if test="actualStartTime != null">
        actual_start_time,
      </if>
      <if test="actualEndTime != null">
        actual_end_time,
      </if>
      <if test="lessonNo != null">
        lesson_no,
      </if>
      <if test="isDeleted != null">
        is_deleted
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="lessonName != null">
        #{lessonName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="roomInfo != null">
        #{roomInfo,jdbcType=VARCHAR},
      </if>
      <if test="actualStartTime != null">
        #{actualStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualEndTime != null">
        #{actualEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lessonNo != null">
        #{lessonNo,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        and is_deleted = #{isDeleted,jdbcType=BIT}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    update t_course_lesson
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="lessonName != null">
        lesson_name = #{lessonName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=INTEGER},
      </if>
      <if test="roomInfo != null">
        room_info = #{roomInfo,jdbcType=VARCHAR},
      </if>
      <if test="actualStartTime != null">
        actual_start_time = #{actualStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualEndTime != null">
        actual_end_time = #{actualEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lessonNo != null">
        lesson_no = #{lessonNo,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateCourseLesson" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    update t_course_lesson
    <set>
    	<if test="roomInfo != null">
        room_info = #{roomInfo,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
       
      <if test="actualStartTime != null">
        actual_start_time = #{actualStartTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateActualEndTime" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    update t_course_lesson
    <set>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualEndTime != null">
        actual_end_time = #{actualEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomInfo != null">
        room_info = #{roomInfo,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mosai.vliveshow.datachannel.domain.course.CourseLesson">
    update t_course_lesson
    set course_id = #{courseId,jdbcType=INTEGER},
      lesson_name = #{lessonName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER},
      room_info = #{roomInfo,jdbcType=VARCHAR},
      actual_start_time = #{actualStartTime,jdbcType=TIMESTAMP},
      actual_end_time = #{actualEndTime,jdbcType=TIMESTAMP},
      lesson_no = #{lessonNo,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertLessonList" parameterType="java.util.List">
    insert into t_course_lesson(course_id, lesson_name, start_time, end_time, operator)
    <trim prefix="values">
      <foreach collection="list" item="item" index="index" separator=",">
        (#{item.courseId,jdbcType=INTEGER},#{item.lessonName,jdbcType=VARCHAR},#{item.startTime,jdbcType=TIMESTAMP},#{item.endTime,jdbcType=TIMESTAMP},#{item.operator,jdbcType=INTEGER})
      </foreach>
    </trim>
  </insert>
  <select id="getTimingLesson" parameterType="java.util.Map" resultMap="BaseResultMap">
select cl.lesson_name,cl.start_time,cl.end_time,cl.course_id,cl."id",cd.teacher_id
		from t_course_detail cd
		inner join t_course_lesson cl on cd.id = cl.course_id
		where cd.teacher_id = #{teacherId,jdbcType=VARCHAR} and
		 cd.is_deleted = false and cd.is_published=TRUE 
and  #{date,jdbcType=TIMESTAMP}  between cl.start_time -INTERVAL '1 day' and cl.end_time
 and cl.is_deleted = false order by start_time asc limit 1
  </select>
  
  <select id="getNextLesson" parameterType="java.util.Map" resultMap="BaseResultMap">
	select 
	<include refid="Base_Column_List" />
	from t_course_lesson
	where course_id = #{courseId,jdbcType=INTEGER} 
	and end_time > #{currentTime,jdbcType=TIMESTAMP} 
	and is_deleted = false
	order by start_time 
	limit 1;
  </select>
  
  <select id="getOverLesson" resultType="_int" parameterType="java.util.Map" >
    select count(id) from t_course_lesson 
    where course_id = #{courseId,jdbcType=INTEGER}  
          and #{currentTime,jdbcType=TIMESTAMP} > end_time  
    	  AND is_deleted = FALSE;
  </select>

  <select id="countByCourseId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT count(id) FROM t_course_lesson WHERE course_id = #{courseId,jdbcType=INTEGER} AND t_course_lesson.is_deleted = FALSE
  </select>

  <select id="getLivingInfoByCourseId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_course_lesson
    where course_id = #{courseId,jdbcType=INTEGER} 
    and #{currentTime,jdbcType=TIMESTAMP}> start_time 
    and end_time > #{currentTime,jdbcType=TIMESTAMP}
    and is_deleted = false
  </select>
  
    <select id="remindLessonStart" parameterType="java.util.Map" resultType="java.util.HashMap">
		select cl.lesson_name as lessonName,cl.start_time as startTime,cd.teacher_id as teacherId
				from t_course_detail cd
				inner join t_course_lesson cl on cd.id = cl.course_id
				where cd.is_deleted = false and cd.is_published=TRUE 
		and to_char(cl.start_time,'YYYY-MM-DD HH24:MI') = #{StartTime,jdbcType=VARCHAR}
		 and cl.is_deleted = false 
  </select>
  
  <select id="getCalendarCoursePublishInfo" resultType="java.util.HashMap">
    select 
		tcd.id as "courseId",
		tcd.course_name as "courseName",
		tcd.course_type as "courseType",
		tcd.teacher_id as "teacherId",
        tcd.teacher_name as "teacherName",
		tcd.pic_cover as "picCover",
		tcd.pic_teacher as "picTeacher",
        tcd.start_time as "courseStartTime",
		tcl.id as "lessonId",
		tcl.lesson_name as "lessonName",
		tcl.room_info as "roomInfo",
		tcl.start_time as "startTime",
        tcl.actual_start_time as "actualStartTime",
        tcl.end_time as "endTime",
        tcl.room_info as "roomInfo",
		tcl.lesson_no as "lessonNo"
	from t_course_detail tcd 
       inner join t_course_lesson tcl on tcd.id = tcl.course_id
    where tcd.is_published = true
       and tcd.is_deleted = false
       and tcl.is_deleted = false
	   and tcd.teacher_id = #{userId,jdbcType=BIGINT}
	   and to_char(tcl.start_time,'yyyy-MM-dd') = #{from,jdbcType=VARCHAR}
  </select>
  <select id="getCalendarCoursePublishCount" resultType="java.util.HashMap">
  SELECT 
    dateStrList.date as "date",
   COALESCE(course.count,0) as "count"
    FROM 
        ( 
            SELECT 
                to_char( to_date(#{fromStr,jdbcType=VARCHAR},'yyyy-MM-dd') + STEP, 'yyyy-MM-dd' ) as "date"
            FROM 
                generate_series (0, #{gap,jdbcType=INTEGER})  as STEP
        ) dateStrList
  
  LEFT JOIN (
  
	    select 
	       to_char(tcl.start_time,'yyyy-mm-dd') as "date",count(tcl.id) as "count"
	    from t_course_detail tcd 
	       inner join t_course_lesson tcl on tcd.id = tcl.course_id
	    where tcd.is_published = true
	       and tcd.is_deleted = false
	       and tcl.is_deleted = false
	       and tcd.teacher_id = #{userId,jdbcType=BIGINT}
	       and tcl.start_time &lt; #{to,jdbcType=TIMESTAMP}
	       and tcl.start_time >= #{from,jdbcType=TIMESTAMP}
	    group by to_char(tcl.start_time,'yyyy-mm-dd')
    ) course on dateStrList.date = course.date
  </select>
  <select id="getCalendarCourseSubscriptionInfo" resultType="java.util.HashMap">
    
	select 
	   tcs.subscription_type as "subscriptionType",
	   tcs.id as "subscriptionId",
	   tcl.start_time as "startTime",
	   tcl.actual_start_time as "actualStartTime",
	   tcl.end_time as "endTime",
	   tcl.room_info as "roomInfo",
	   tcl.lesson_no as "lessonNo",
	   tcl.id as "lessonId",
	   tcl.lesson_name as "lessonName",
	   tcd.id as "courseId",
       tcd.start_time as "courseStartTime",
	   tcd.course_name as "courseName",
	   tcd.course_type as "courseType",
	   tcd.teacher_id as "teacherId",
	   tcd.teacher_name as "teacherName",
	   tcd.pic_cover as "picCover",
	   tcd.pic_teacher as "picTeacher"
	from t_course_subscription tcs 
	   inner join t_course_detail tcd on tcs.course_id = tcd.id 
	   inner join t_course_lesson tcl on tcl.course_id=tcd.id
	where tcs.is_deleted = false 
	   and tcs.is_refunded = false
	   and tcd.is_published = true
	   and tcd.is_deleted = false
	   and tcl.is_deleted = false
	   and tcs.user_id = #{userId,jdbcType=BIGINT}
	   and to_char(tcl.start_time,'yyyy-MM-dd') = #{from,jdbcType=VARCHAR}
  </select>
  <select id="getCalendarCourseSubscriptionCount" resultType="java.util.HashMap">
  
  
  SELECT 
    dateStrList.date as "date",
   COALESCE(course.count,0) as "count"
	FROM 
	    ( 
	        SELECT 
	            to_char( to_date(#{fromStr,jdbcType=VARCHAR},'yyyy-MM-dd') + STEP, 'yyyy-MM-dd' ) as "date"
	        FROM 
	            generate_series (0, #{gap,jdbcType=INTEGER})  as STEP
	    ) dateStrList
  
  LEFT JOIN (
	    select 
	       to_char(tcl.start_time,'yyyy-mm-dd') as "date",count(tcs.id) as "count"
	    from t_course_subscription tcs 
	       inner join t_course_detail tcd on tcs.course_id = tcd.id 
	       inner join t_course_lesson tcl on tcl.course_id=tcd.id
	    where tcs.is_deleted = false 
	       and tcs.is_refunded = false
	       and tcd.is_published = true
	       and tcd.is_deleted = false
	       and tcl.is_deleted = false
	       and tcs.user_id = #{userId,jdbcType=BIGINT}
	       and tcl.start_time &lt; #{to,jdbcType=TIMESTAMP}  
	       and tcl.start_time >= #{from,jdbcType=TIMESTAMP}
	    group by to_char(tcl.start_time,'yyyy-mm-dd')
	) course on dateStrList.date = course.date
  </select>
</mapper>